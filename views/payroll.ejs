<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Payroll Management</title>
  <link rel="stylesheet" href="/style.css">
  <link rel="stylesheet" href="/payroll-page.css">
  <style>
    .container { margin: 0 20px; }
    .form-group { display: flex; align-items: center; gap: 0.5rem; margin-bottom: 20px; }
    .form-group select { min-width: 200px; }
    .reference-btn { margin-left: 0.5rem; }
    .payroll-table-wrapper { display: flex; flex-wrap: wrap; gap: 20px; margin-bottom: 20px; }
    .payroll-group { display: flex; gap: 1rem; padding: 10px; border: 2px solid #ccc; border-radius: 10px; flex-direction: row; align-items: flex-start; background-color: #f9f9f9; }
    .payroll-item { display: flex; flex-direction: column; align-items: center; gap: 4px; }
    .payroll-item label { font-weight: bold; }
    .payroll-item input { width: 70px; }
    .payroll-summary-group { display: flex; gap: 1rem; padding: 10px; border: 2px solid #ccc; border-radius: 10px; background-color: #f3f3f3; }
    .payroll-summary-item { display: flex; flex-direction: column; align-items: center; gap: 4px; min-width: 80px; }
    .payroll-form { width: 100%; box-sizing: border-box; }
    .row { margin-bottom: 20px; }
    .remark-inline { display: flex; align-items: center; gap: 6rem; margin-bottom: 20px; flex-wrap: wrap; }
    .remark-inline input { flex: 0 0 200px; min-width: 200px; }
    .work-info { display: flex; gap: 6rem; align-items: center; }
    .footer-actions { display: flex; justify-content: space-between; align-items: center; margin-top: 20px; flex-wrap: wrap; gap: 1rem; }
    .footer-left, .footer-center, .footer-right { display: flex; align-items: center; gap: 0.5rem; }
    .footer-center { justify-content: center; flex: 1; }
    .back-button-row { display: flex; justify-content: center; margin-top: 30px; }
    .back-button-row button { padding: 8px 16px; font-size: 14px; background-color: #888; color: white; border: none; border-radius: 5px; cursor: pointer; }
    .back-button-row button:hover { background-color: #555; }
    #saveComment { text-align: center; margin-top: 10px; font-size: 0.95rem; color: green; }
    .blue-text { color: #007bff; font-weight: bold; }
  </style>
</head>
<body class="payroll-page">
  <h2>Pay List</h2>
  <div class="container">
    <form id="payrollForm" action="/paylist/add" method="post" class="payroll-form" onsubmit="return showSaveComment()">
      <div class="row">
        <div class="form-group">
          <label for="name">Name :</label>
          <select id="ep_ref" name="name" onchange="updateReferenceInfo()">
            <option value="">-- Select Employee --</option>
            <% employees.forEach(emp => { %>
              <option value="<%= emp.name %>" data-eid="<%= emp.eid %>" data-jcode="<%= emp.jcode %>" data-jtitle="<%= emp.jtitle %>" data-work1="<%= emp.work1 %>"><%= emp.name %></option>
            <% }) %>
          </select>
          <span id="eidDisplay" class="blue-text"></span>
        </div>
      </div>

      <div class="row">
        <label for="pdate">Pay Date :</label>
        <input type="date" name="pdate" id="pdate" required>
      </div>

      <div class="payroll-table-wrapper">
        <div class="payroll-group">
          <div class="payroll-item"><label>Check No.</label><input type="text" name="ckno_table"></div>
        </div>
        <div class="payroll-group">
          <div class="payroll-item"><label>R.T</label><input type="text" name="rtime" value="0" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>O.T</label><input type="text" name="otime" value="0" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>D.T</label><input type="text" name="dtime" value="0" oninput="formatDecimal(this)"></div>
        </div>
        <div class="payroll-group">
          <div class="payroll-item"><label>FW</label><input type="text" name="fw" value="0" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>SSE</label><input type="text" name="sse" value="0" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>ME</label><input type="text" name="me" value="0" oninput="formatDecimal(this)"></div>
        </div>
        <div class="payroll-group">
          <div class="payroll-item"><label>CA-W</label><input type="text" name="caw" value="0" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>CA-de</label><input type="text" name="cade" value="0" oninput="formatDecimal(this)"></div>
        </div>
        <div class="payroll-group">
          <div class="payroll-item"><label>ADV.</label><input type="text" name="adv" value="0" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>C.S</label><input type="text" name="d1" value="0" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>D.D</label><input type="text" name="dd" value="0" oninput="formatDecimal(this)"></div>
        </div>
      </div>

      <div class="remark-inline">
        <label for="remark">Remark :</label>
        <input type="text" name="remark" id="remark">
        <div class="work-info">
          <span>W.code: <span id="jcodeDisplay" class="blue-text"></span></span>
          <span>W.title: <span id="jtitleDisplay" class="blue-text"></span></span>
          <span>W.location: <span id="work1Display" class="blue-text"></span></span>
        </div>
      </div>

      <div class="footer-actions">
        <div class="footer-left">
          <label for="ckno">Check No. :</label>
          <input type="text" name="ckno" id="ckno">
          <button type="button">선택</button>
          <button type="button">수정</button>
          <button type="button">삭제</button>
        </div>
        <div class="footer-center">
          <input type="date" name="selectedDate">
          <button type="button" class="view-btn">보기</button>
          <button type="button" class="print-btn">출력</button>
        </div>
        <div class="footer-right">
          <button type="submit">입력저장</button>
        </div>
      </div>
      <div id="saveComment"></div>
      <input type="hidden" name="eid" id="hiddenEid">
      <input type="hidden" name="jcode" id="hiddenJcode">
      <input type="hidden" name="jtitle" id="hiddenJtitle">
      <input type="hidden" name="work1" id="hiddenWork1">
    </form>
    <div class="back-button-row">
      <button onclick="window.location.href='/payroll'">창 닫기</button>
    </div>
  </div>

  <script>
    function updateReferenceInfo() {
      const selected = document.querySelector('#ep_ref');
      const option = selected.options[selected.selectedIndex];

      const eidVal = option.getAttribute('data-eid') || '';
      const jcodeVal = option.getAttribute('data-jcode') || '';
      const jtitleVal = option.getAttribute('data-jtitle') || '';
      const work1Val = option.getAttribute('data-work1') || '';

      document.getElementById('eidDisplay').innerText = eidVal;
      document.getElementById('jcodeDisplay').innerText = jcodeVal;
      document.getElementById('jtitleDisplay').innerText = jtitleVal;
      document.getElementById('work1Display').innerText = work1Val;

      document.getElementById('hiddenEid').value = eidVal;
      document.getElementById('hiddenJcode').value = jcodeVal;
      document.getElementById('hiddenJtitle').value = jtitleVal;
      document.getElementById('hiddenWork1').value = work1Val;
    }

    function showSaveComment() {
      const selected = document.querySelector('#ep_ref');
      const name = selected.value;
      const eid = selected.options[selected.selectedIndex]?.getAttribute('data-eid') || '';
      const commentBox = document.getElementById('saveComment');
      commentBox.innerText = `eid: ${eid} / ${name} 이 지금 입력되었습니다.`;
      return true;
    }

    function formatDecimal(input) {
      let value = input.value;
      value = value.replace(/[^\d.]/g, '');
      const parts = value.split('.');
      if (parts.length > 2) value = parts[0] + '.' + parts[1];
      if (parts[1]?.length > 2) value = parts[0] + '.' + parts[1].substring(0, 2);
      input.value = value;
    }

    document.addEventListener('DOMContentLoaded', () => {
      const fieldNames = ['ckno_table', 'rtime', 'otime', 'dtime', 'fw', 'sse', 'me', 'caw', 'cade', 'adv', 'd1', 'dd', 'remark'];
      const fields = fieldNames.map(name => document.querySelector(`[name="${name}"]`)).filter(el => el);
      fields.forEach((field, index) => {
        field.addEventListener('keydown', (e) => {
          if (e.key === 'Enter') {
            e.preventDefault();
            const next = fields[index + 1];
            if (next) next.focus();
          }
        });
      });
    });
  </script>
</body>
</html>